@page "/servers"
@page "/servers/back_from/{cityName}"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />

<CityListComponent 
    @ref="cityListComponent" 
    SelectCityCallback="HandleCitySelection"
    selectedCity="@selectedCity"></CityListComponent>
<br />

<SearchBarComponent @ref="searchBarComponent" SearchServerCallback="HandleSearchServer"
    style="width:500px"></SearchBarComponent>
<br />
<CascadingValue Name="SelectedCity" Value="@selectedCity">
    <ServerListComponent 
        @rendermode="InteractiveServer" 
        CityName="@selectedCity" 
        ServerFilter="@serverFilter"></ServerListComponent>

</CascadingValue>
<br />
<p>
    <a href="/servername" class="btn btn-primary">Add Server</a>
</p>

@code {
    [Parameter]
    public string? CityName { get; set; }

    public string selectedCity { get; set; } = "Toronto";
    public string serverFilter { get; set; } = String.Empty;

    private CityListComponent? cityListComponent;
    private SearchBarComponent? searchBarComponent;

    private void HandleCitySelection(string cityName)
    {
        this.serverFilter = string.Empty;
        this.selectedCity = cityName;
        searchBarComponent?.ClearFilter();
    }

    private void HandleSearchServer(string serverFilter)
    {
        this.selectedCity = string.Empty;
        this.serverFilter = serverFilter;
        cityListComponent?.ClearSelection();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if(NavigationManager.Uri.Contains("back_from")
            && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;
                StateHasChanged();
            }
        }
    }
}
