@page "/cityname"
@using ServerManagement.StateStore

@rendermode InteractiveServer

@inherits ComponentBase

@inject NavigationManager NavigationManager
@inject ContainerStorage containerStorage

<MudPaper Class="pt-3 mx-2 mt-2 mb-4" Elevation="0">

    <MudText Typo="Typo.h4">City Name</MudText>
    <br />

    @if (!string.IsNullOrWhiteSpace(errorMessage))
    {
        <MudAlert Severity="Severity.Error">
            @errorMessage
        </MudAlert>
    }

    @if (server is not null)
    {
        <FieldComponent Label="City Name">
            <Control>
                <MudTextField @bind-Value="server.City" Label="City Name" Variant="Variant.Outlined"></MudTextField>
            </Control>
        </FieldComponent>
        <br />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GoNext">Next</MudButton>
    }
</MudPaper>

@code {
    private Server? server;

    private string? errorMessage;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            this.server = this.containerStorage.GetServer();
            StateHasChanged();
        }
    }

    private void GoNext()
    {
        if (server is not null)
        {
            if (string.IsNullOrWhiteSpace(server.City))
            {
                this.errorMessage = "City Name is required.";
            }
            else
            {
                containerStorage.SetServer(server);
                NavigationManager.NavigateTo("/serverstatus");
            }
        }
    }
}