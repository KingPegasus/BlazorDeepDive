@* @if (this.servers !=null && this.servers.Count > 0)
{
    <ul class="list-unstyled">
        <Virtualize Items="this.servers" Context="server">
            <ServerComponent Server="server"></ServerComponent>
        </Virtualize>
    </ul>
} *@

@* Converting using Typed Templated Component*@
@* <ul class="list-unstyled">
    <RepeaterComponent Items="this.servers">
        <Row Context="server">
            <ServerComponent Server="server"></ServerComponent>
        </Row>
    </RepeaterComponent>
</ul> *@

@* Converting to html table *@
<table class="table table-striped">
    <RepeaterComponent Items="servers">
        <Header>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    City
                </th>
                <th>
                    Status
                </th>
                <th>
                    People Online
                </th>
                <th></th>
                <th></th>     
            </tr>
        </Header>
        <Row Context="server">
            <ServerComponent Server="server"></ServerComponent>
        </Row>
    </RepeaterComponent>
</table>

@code {
    [Parameter]
    public string? CityName { get; set; }

    [Parameter]
    public string? ServerFilter { get; set; }

    private List<Server>? servers;

    public override Task SetParametersAsync(ParameterView parameters)
    {
        if (parameters.TryGetValue<string>("CityName", out var cityName))
        {
            if (cityName != CityName)
            {
                base.SetParametersAsync(parameters);
            }
        }

        if (parameters.TryGetValue<string>("ServerFilter", out var serverFilter))
        {
            if (serverFilter != ServerFilter)
            {
                base.SetParametersAsync(parameters);
            }
        }
        return Task.CompletedTask;
    }

    protected override void OnParametersSet()
    {
        if (string.IsNullOrWhiteSpace(this.ServerFilter))
        {
            this.servers = ServersRepository.GetServersByCity(this.CityName ?? "Toronto");
        }
        else
        {
            this.servers = ServersRepository.SearchServers(this.ServerFilter ?? "");
            this.CityName = string.Empty;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            //Init here
            if (string.IsNullOrWhiteSpace(this.ServerFilter))
            {
                this.servers = ServersRepository.GetServersByCity(this.CityName ?? "Toronto");
            }
            else
            {
                this.servers = ServersRepository.SearchServers(this.ServerFilter ?? "");
                this.CityName = string.Empty;
            }
        }
    }
}
